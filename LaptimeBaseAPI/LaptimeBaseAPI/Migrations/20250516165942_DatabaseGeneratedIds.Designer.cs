// <auto-generated />
using System;
using LaptimeBaseAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LaptimeBaseAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250516165942_DatabaseGeneratedIds")]
    partial class DatabaseGeneratedIds
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("LaptimeBaseAPI.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("class");

                    b.HasKey("Id");

                    b.ToTable("car");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Laptime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("created_at");

                    b.Property<int?>("SessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("TEXT")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.HasIndex("SessionId");

                    b.HasIndex("TeamId");

                    b.ToTable("laptime");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AmbientTemp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ambient_temp");

                    b.Property<DateTime>("HeldAt")
                        .HasColumnType("TEXT")
                        .HasColumnName("held_at");

                    b.Property<int>("TrackId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TrackTemp")
                        .HasColumnType("INTEGER")
                        .HasColumnName("track_temp");

                    b.HasKey("Id");

                    b.HasIndex("TrackId");

                    b.ToTable("session");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CarId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("team");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("track");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_admin");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("password");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Laptime", b =>
                {
                    b.HasOne("LaptimeBaseAPI.Models.Session", null)
                        .WithMany("Laptimes")
                        .HasForeignKey("SessionId");

                    b.HasOne("LaptimeBaseAPI.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Session", b =>
                {
                    b.HasOne("LaptimeBaseAPI.Models.Track", "Track")
                        .WithMany()
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Team", b =>
                {
                    b.HasOne("LaptimeBaseAPI.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LaptimeBaseAPI.Models.User", null)
                        .WithMany("Teams")
                        .HasForeignKey("UserId");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.Session", b =>
                {
                    b.Navigation("Laptimes");
                });

            modelBuilder.Entity("LaptimeBaseAPI.Models.User", b =>
                {
                    b.Navigation("Teams");
                });
#pragma warning restore 612, 618
        }
    }
}
